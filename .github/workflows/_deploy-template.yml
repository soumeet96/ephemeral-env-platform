# .github/workflows/templates/deploy-template.yml
name: Reusable Terraform Deploy

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      GITHUBTOKEN:
        required: true

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.10.5

jobs:
  deploy:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Normalize branch name
        id: normalize
        run: |
          RAW_BRANCH="${{ inputs.branch }}"
          ENCODED_BRANCH=$(echo "$RAW_BRANCH" | base64 | tr -d '=' | tr '/+' '_-')
          BRANCH_NAME="$ENCODED_BRANCH"
          echo "RAW_BRANCH=$RAW_BRANCH" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=my-tf-backup" \
            -backend-config="key=env/$BRANCH_NAME/terraform.tfstate" \
            -backend-config="region=us-east-1" \
            -backend-config="dynamodb_table=terraform-lock-table" \
            -backend-config="encrypt=true"
        working-directory: ./terraform

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="branch_name=$BRANCH_NAME" \
            -var="name=$BRANCH_NAME" \
            -var="github_token=${{ secrets.GITHUBTOKEN }}" \
            -out=tfplan
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform

      - name: Get API Gateway URL
        id: api_url
        run: |
          echo "api_url=$(terraform output -raw manual_trigger_api_url)" >> $GITHUB_OUTPUT
        working-directory: ./terraform

      - name: Notify Slack - Deployment Success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"blocks\": [
              {
                \"type\": \"header\",
                \"text\": {
                  \"type\": \"plain_text\",
                  \"text\": \"üöÄ Deployment Successful!!\",
                  \"emoji\": true
                }
              },
              {
                \"type\": \"section\",
                \"fields\": [
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Branch:*\n${{ env.RAW_BRANCH }}\"
                  },
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Trigger API:*\n${{ steps.api_url.outputs.api_url }}?repo=soumeet96/ephemeral-env-platform&branch=${{ env.RAW_BRANCH }}\"
                    }
                  ]
                },
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \"üåê *Preview URL:*\nhttp://${{ env.BRANCH_NAME }}.soumeet.store\"
                }
              }
            ]
          }" ${{ secrets.SLACK_WEBHOOK_URL }}