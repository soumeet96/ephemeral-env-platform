name: Remote Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch name for the environment to destroy'
        required: true
        type: string

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.10.5

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Normalize branch name
        id: normalize
        run: |
          NORMALIZED_BRANCH="${{ github.event.inputs.branch }}"
          NORMALIZED_BRANCH="${NORMALIZED_BRANCH//\//-}"
          echo "normalized_branch=$NORMALIZED_BRANCH" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=my-tf-backup" \
            -backend-config="key=env/${{ steps.normalize.outputs.normalized_branch }}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=terraform-lock-table" \
            -backend-config="encrypt=true"
        working-directory: ./terraform

      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve \
            -var="branch_name=${{ github.event.inputs.branch }}" \
            -var="name=${{ github.event.inputs.branch }}"
        working-directory: ./terraform
