name: Deploy Ephemeral Environment

on:
  push:
    branches:
      - 'feature/**'
  pull_request:
    types: [closed]

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.10.5

jobs:
  deploy:
    if: github.event_name == 'push'
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Set branch name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="branch_name=${{ env.BRANCH_NAME }}" \
            -var="name=${{ env.BRANCH_NAME }}" \
            -out=tfplan
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform

  destroy:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    name: Terraform Destroy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Set branch name from PR
        run: echo "BRANCH_NAME=$(echo "${{ github.head_ref }}")" >> $GITHUB_ENV

      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve \
            -var="branch_name=${{ env.BRANCH_NAME }}" \
            -var="name=${{ env.BRANCH_NAME }}"
        working-directory: ./terraform
